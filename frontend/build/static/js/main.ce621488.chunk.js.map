{"version":3,"sources":["config.js","utils/Axios/index.js","components/Container/index.js","components/Card/index.js","helper/indo.js","components/Info/index.js","components/Animates/Loading.js","utils/SweetAlert/index.js","modals/AddItem.js","modals/UpdateItem.js","modals/ViewItem.js","App.js","reportWebVitals.js","index.js"],"names":["config","String","process","includes","agent","require","Agent","rejectUnauthorized","postRequest","url","data_object","result","error_message","onFinal","debug","keys","Object","values","data","FormData","i","length","key","value","append","axios","post","httpsAgent","headers","then","response","JSON","parse","request","responseText","hasil","console","log","success","message","catch","error","finally","Container","class","this","props","children","Component","Card","className","onClick","nama","formatRupiah","angka","prefix","split","parseInt","replace","sisa","rupiah","substr","ribuan","match","join","undefined","Info","harga","keuntungan","style","display","flexDirection","justifyContent","href","onUpdate","onDelete","Loading","useLoading","loading","indicator","width","size","containerProps","indicatorEl","textAlign","marginTop","fontSize","Swal","withReactContent","MySwal","createModal","title","fire","html","showConfirmButton","showCancelButton","showCloseButton","allowOutsideClick","didOpen","didClose","createSuccess","timer","ifClose","icon","willClose","AddItem","state","nama_item","type","placeholder","onChange","e","target","setState","setTimeout","onSubmit","UpdateItem","for","id","_id","ViewItem","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","moment","lang","now_date","unix","Date","getTime","format","App","isLoaded","item","view","get","getRequest","refreshData","addItem","updateItem","onConfirm","deleteItem","confirmButtonText","confirmButtonColor","cancelButtonText","cancelButtonColor","reverseButtons","isConfirmed","isDenied","close","modalInsert","element","filename","sort","a","b","map","val","no","harga_jual","name","label","filter","v","modalView","modalUpdate","modalDelete","height","alignItems","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce621488.chunk.js","sourcesContent":["const production = String(process.env.NODE_ENV).includes(\"production\") ? true : false;\r\n\r\nconst config = {\r\n    url_backend: production ? \"\" : \"http://localhost:5000\",\r\n}\r\n\r\nexport {\r\n    config,\r\n    production,\r\n}","import axios from \"axios\";\r\nimport { config } from \"../../config\";\r\n\r\nconst https = require(\"https\");\r\nconst agent = new https.Agent({\r\n  rejectUnauthorized: false,\r\n});\r\n\r\n/**\r\n * \r\n * @param {String} url path alamat tujuan\r\n * @param {Object} result hasil yang diterima dari server\r\n * @param {String} error_message ketika ada error\r\n * @param {Blank} onFinal ketika apapun itu sudah selesai semua\r\n * @param {Boolean} debug untuk melihat log\r\n */\r\nfunction getRequest(url, result, error_message, onFinal = false, debug = false) {\r\n  axios.get(config.url_backend + url, {\r\n    httpsAgent: agent,\r\n  })\r\n    .then(response => {\r\n      return JSON.parse(response.request.responseText);\r\n    })\r\n    .then(hasil => {\r\n      if (debug) {\r\n        console.log(url, hasil);\r\n      }\r\n      if (hasil.success) {\r\n        result(hasil);\r\n      } else {\r\n        console.log(hasil.message);\r\n        if (error_message) {\r\n          error_message(hasil.message);\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      if (error.message === \"Network Error\") {\r\n        if (error_message) {\r\n          error_message(error.message, error);\r\n        }\r\n      }\r\n    })\r\n    .finally(() => {\r\n      if (onFinal) {\r\n        onFinal();\r\n      }\r\n    });\r\n}\r\n\r\n/**\r\n * \r\n * @param {String} url path alamat tujuan\r\n * @param {Object} data_object data yang ingin dikirimkan\r\n * @param {Object} result hasil yang diterima dari server\r\n * @param {String} error_message ketika ada error\r\n * @param {Blank} onFinal ketika apapun itu sudah selesai semua\r\n * @param {Boolean} debug untuk melihat log\r\n */\r\nfunction postRequest(url, data_object, result, error_message = false, onFinal = false, debug = false) {\r\n  const keys = Object.keys(data_object);\r\n  const values = Object.values(data_object);\r\n\r\n  // collect data\r\n  const data = new FormData();\r\n  for (let i = 0; i < keys.length; i++) {\r\n    const key = keys[i];\r\n    const value = values[i];\r\n    data.append(key, value);\r\n  }\r\n\r\n  axios.post(config.url_backend + url, data, {\r\n    httpsAgent: agent,\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data',\r\n      // 'Content-Type': 'application/json',\r\n    },\r\n  })\r\n    .then(response => {\r\n      return JSON.parse(response.request.responseText);\r\n    })\r\n    .then(hasil => {\r\n      if (debug) {\r\n        console.log(url, hasil);\r\n      }\r\n      if (hasil.success) {\r\n        result(hasil);\r\n      } else {\r\n        console.log(hasil.message);\r\n        if (error_message) {\r\n          error_message(hasil.message);\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      if (error.message === \"Network Error\") {\r\n        if (error_message) {\r\n          error_message(error.message, error);\r\n        }\r\n      }\r\n    })\r\n    .finally(() => {\r\n      if (onFinal) {\r\n        onFinal();\r\n      }\r\n    });\r\n}\r\n\r\nexport {\r\n  getRequest,\r\n  postRequest,\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Container extends Component {\r\n    render() {\r\n        return (\r\n            <div class=\"container p-4\">\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Card extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-6 col-lg-4 mt-4\">\r\n                <div className=\"card\">\r\n                    <h5 className=\"card-header text-center\" onClick={() => {\r\n                        this.props.onClick();\r\n                    }}>{this.props.nama}</h5>\r\n                    <div className=\"card-body\">\r\n                        {this.props.children}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","function formatRupiah(angka, prefix) {\r\n    //formatRupiah(harga_delivery, 'Rp. ')\r\n    var number_string = String(parseInt(angka)).replace(/[^,\\d]/g, \"\"),\r\n        split = number_string.split(\",\"),\r\n        sisa = split[0].length % 3,\r\n        rupiah = split[0].substr(0, sisa),\r\n        ribuan = split[0].substr(sisa).match(/\\d{3}/gi);\r\n\r\n    // tambahkan titik jika yang di input sudah menjadi angka ribuan\r\n    if (ribuan) {\r\n        var separator = sisa ? \".\" : \"\";\r\n        rupiah += separator + ribuan.join(\".\");\r\n    }\r\n\r\n    rupiah = split[1] !== undefined ? rupiah + \",\" + split[1] : rupiah;\r\n    return prefix === undefined ? rupiah : rupiah ? prefix + rupiah : \"\";\r\n}\r\n\r\nexport {\r\n    formatRupiah,\r\n}","import React, { Component } from 'react';\r\nimport { formatRupiah } from \"../../helper/indo\";\r\n\r\nexport default class Info extends Component {\r\n    render() {\r\n        const {\r\n            harga,\r\n            keuntungan,\r\n        } = this.props;\r\n        return (\r\n            <>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <div style={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"row\",\r\n                            justifyContent: \"center\",\r\n                        }}>\r\n                            <p className=\"text-danger\" onClick={() => {\r\n                                this.props.onClick();\r\n                            }}>{formatRupiah(harga, \"Rp.\")}</p>\r\n                            <i class=\"bi bi-arrow-right\"></i>\r\n                            <p className=\"text-success\" onClick={() => {\r\n                                this.props.onClick();\r\n                            }}>{formatRupiah(harga + keuntungan, \"Rp.\")}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6 text-center\">\r\n                        <a href=\"!#\" className=\"btn btn-secondary\" onClick={() => {\r\n                            this.props.onUpdate();\r\n                        }} >Edit</a>\r\n                    </div>\r\n                    <div className=\"col-6 text-center\">\r\n                        <a href=\"!#\" className=\"btn btn-danger\" onClick={() => {\r\n                            this.props.onDelete();\r\n                        }} >Hapus</a>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\nimport { useLoading, Oval } from \"@agney/react-loading\";\n\nconst Loading = (props) => {\n  const { containerProps, indicatorEl } = useLoading({\n    loading: true,\n    indicator: <Oval width={props.size} />,\n  });\n  return (\n    <>\n      <div style={{ textAlign: \"center\" }}>\n        <section {...containerProps}>\n          {indicatorEl} {/* renders only while loading */}\n        </section>\n        <h2 style={{ marginTop: \"10px\", fontSize: props.fontSize }}>{props.message}</h2>\n      </div>\n    </>\n  );\n};\n\nexport default Loading;\n","import React, { Component } from 'react';\r\n\r\n// Components\r\nimport Loading from \"../../components/Animates/Loading\";\r\n\r\n// Sweet Alert 2 Package\r\nimport MySwal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst Swal = withReactContent(MySwal);\r\n\r\nconst createModal = (title, children, width = 600) => {\r\n  Swal.fire({\r\n    title: <p>{title}</p>,\r\n    html: children,\r\n    width,\r\n    showConfirmButton: false,\r\n    showCancelButton: false,\r\n    showCloseButton: true,\r\n    allowOutsideClick: false,\r\n\r\n    didOpen: () => {\r\n      //\r\n    },\r\n\r\n    didClose: () => {\r\n      //\r\n    },\r\n  });\r\n}\r\n\r\nconst createSuccess = (message, timer = 3000, ifClose = false) => {\r\n  Swal.fire({\r\n    title: <p>{message}</p>,\r\n    icon: \"success\",\r\n\r\n    showConfirmButton: false,\r\n    showCancelButton: false,\r\n    showCloseButton: true,\r\n\r\n    willClose: () => {\r\n      if (ifClose) {\r\n        ifClose();\r\n      }\r\n    },\r\n\r\n    timer,\r\n  });\r\n}\r\nconst createError = (message) => {\r\n  Swal.fire({\r\n    title: <p>{message}</p>,\r\n    icon: \"error\",\r\n\r\n    showConfirmButton: false,\r\n    showCancelButton: false,\r\n    showCloseButton: true,\r\n  });\r\n}\r\nconst createWarning = (message) => {\r\n  Swal.fire({\r\n    title: <p>{message}</p>,\r\n    icon: \"warning\",\r\n\r\n    showConfirmButton: false,\r\n    showCancelButton: false,\r\n    showCloseButton: true,\r\n  });\r\n}\r\nconst createInfo = (message) => {\r\n  Swal.fire({\r\n    title: <p>{message}</p>,\r\n    icon: \"info\",\r\n\r\n    showConfirmButton: false,\r\n    showCancelButton: false,\r\n    showCloseButton: true,\r\n  });\r\n}\r\n\r\nconst createDelete = (onConfirm, message) => {\r\n  Swal.fire({\r\n    html: message,\r\n\r\n    showConfirmButton: true,\r\n    confirmButtonText: <span>Ya</span>,\r\n    confirmButtonColor: \"#dc3545\",\r\n\r\n    showCancelButton: true,\r\n    cancelButtonText: <span>Batal</span>,\r\n    cancelButtonColor: \"#6c757d\",\r\n\r\n    reverseButtons: false,\r\n    showCloseButton: true,\r\n    allowOutsideClick: false,\r\n  }).then((result) => {\r\n    /* Read more about isConfirmed, isDenied below */\r\n    if (result.isConfirmed) {\r\n      onConfirm();\r\n    } else if (result.isDenied) {\r\n      Swal.close();\r\n    }\r\n  });\r\n}\r\n\r\nclass ModalValidasiPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      masukan_password: null,\r\n      password_ok: false,\r\n\r\n      // styling\r\n      animasi_loading: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      masukan_password,\r\n      password_ok,\r\n\r\n      animasi_loading,\r\n    } = this.state;\r\n    return (\r\n      <>\r\n        {animasi_loading ? <>\r\n          <Loading message={\"Request...\"} size={50} fontSize={20} />\r\n        </> : <>\r\n          <div class=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              class=\"form-control\"\r\n              placeholder=\"Password\"\r\n              onChange={(e) => {\r\n                if (String(e.target.value) === localStorage.getItem(\"password\")) {\r\n                  this.setState({\r\n                    masukan_password: e.target.value,\r\n                    password_ok: true,\r\n                  });\r\n                } else {\r\n                  this.setState({\r\n                    masukan_password: e.target.value,\r\n                    password_ok: false,\r\n                  });\r\n                }\r\n              }}\r\n              onKeyDown={(e) => {\r\n                if (e.key === 'Enter') {\r\n                  if (masukan_password === localStorage.getItem(\"password\")) {\r\n                    this.props.onMatch();\r\n                  }\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          {password_ok ? <>\r\n            <button\r\n              type=\"button\"\r\n              className={\"btn btn-\" + this.props.warna}\r\n              onClick={() => {\r\n                if (masukan_password === localStorage.getItem(\"password\")) {\r\n                  this.props.onMatch();\r\n                  this.setState({\r\n                    animasi_loading: true,\r\n                  });\r\n                }\r\n              }}\r\n            >{this.props.nama_button}</button>\r\n          </> : null}\r\n        </>}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction validasiPassword(nama_button, onMatch, warna = \"success\") {\r\n  createModal(\"Masukan Password\", <ModalValidasiPassword nama_button={nama_button} onMatch={onMatch} warna={warna} />);\r\n}\r\n\r\nfunction modalLoading(message) {\r\n  Swal.fire({\r\n    html: <>\r\n      <Loading message={message} size={60} fontSize={20} />\r\n    </>,\r\n\r\n    showConfirmButton: false,\r\n    showCancelButton: false,\r\n    showCloseButton: false,\r\n    allowOutsideClick: false,\r\n  });\r\n}\r\n\r\nfunction closeModal() {\r\n  Swal.close();\r\n}\r\n\r\nexport {\r\n  createModal,\r\n  createSuccess,\r\n  createError,\r\n  createWarning,\r\n  createInfo,\r\n  createDelete,\r\n\r\n  validasiPassword,\r\n  modalLoading,\r\n\r\n  closeModal,\r\n}\r\n\r\n// Example Modal Components (copy)\r\n// eslint-disable-next-line \r\nclass Modal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ok: \"ABC\",\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      ok,\r\n    } = this.state;\r\n    return (\r\n      <>\r\n        {ok}\r\n      </>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\n\r\nimport Loading from \"../components/Animates/Loading\";\r\n\r\nexport default class AddItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nama_item: null,\r\n            harga: null,\r\n            keuntungan: null,\r\n            //\r\n            loading: false,\r\n        }\r\n    }\r\n    render() {\r\n        const {\r\n            nama_item,\r\n            harga,\r\n            keuntungan,\r\n            //\r\n            loading,\r\n        } = this.state;\r\n        if (loading) {\r\n            return <Loading\r\n                size={50}\r\n                fontSize={20}\r\n                message={\"Request...\"}\r\n            />\r\n        } else {\r\n            return (\r\n                <>\r\n                    <div class=\"mb-3\">\r\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Nama Item\" value={nama_item} onChange={e => {\r\n                            if (String(e.target.value).length > 0) {\r\n                                this.setState({\r\n                                    nama_item: e.target.value,\r\n                                });\r\n                            } else {\r\n                                this.setState({\r\n                                    nama_item: null,\r\n                                });\r\n                            }\r\n                        }} />\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Harga\" value={harga} onChange={e => {\r\n                            // eslint-disable-next-line\r\n                            e.target.value = e.target.value.replace(/[^0-9\\.]+/g, '');\r\n                            if (String(e.target.value).length > 0) {\r\n                                this.setState({\r\n                                    harga: parseInt(e.target.value),\r\n                                });\r\n                            } else {\r\n                                this.setState({\r\n                                    harga: null,\r\n                                });\r\n                            }\r\n                        }} />\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Keuntungan\" value={keuntungan} onChange={e => {\r\n                            // eslint-disable-next-line\r\n                            e.target.value = e.target.value.replace(/[^0-9\\.]+/g, '');\r\n                            if (String(e.target.value).length > 0) {\r\n                                this.setState({\r\n                                    keuntungan: parseInt(e.target.value),\r\n                                });\r\n                            } else {\r\n                                this.setState({\r\n                                    keuntungan: null,\r\n                                });\r\n                            }\r\n                        }} />\r\n                    </div>\r\n                    {(nama_item && String(nama_item).length > 0) && (harga && String(harga).length > 0) && (keuntungan && String(keuntungan).length > 0) ? <>\r\n                        <button class=\"btn btn-success\" onClick={() => {\r\n                            this.setState({\r\n                                loading: true,\r\n                            });\r\n                            setTimeout(() => {\r\n                                this.props.onSubmit({\r\n                                    nama: nama_item,\r\n                                    harga,\r\n                                    keuntungan,\r\n                                });\r\n                            }, 400);\r\n                        }}>Submit</button>\r\n                    </> : null}\r\n                </>\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport Loading from \"../components/Animates/Loading\";\r\n\r\nexport default class UpdateItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //\r\n        const {\r\n            nama,\r\n            harga,\r\n            keuntungan,\r\n        } = this.props;\r\n        //\r\n        this.state = {\r\n            nama_item: nama,\r\n            harga,\r\n            keuntungan,\r\n            //\r\n            loading: false,\r\n        }\r\n    }\r\n    render() {\r\n        const {\r\n            nama_item,\r\n            harga,\r\n            keuntungan,\r\n            //\r\n            loading,\r\n        } = this.state;\r\n        if (loading) {\r\n            return <Loading\r\n                size={50}\r\n                fontSize={20}\r\n                message={\"Request...\"}\r\n            />\r\n        } else {\r\n            return (\r\n                <>\r\n                    <div class=\"mb-3\">\r\n                        <label for=\"input-nama-item\" class=\"form-label\">Nama Item</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"input-nama-item\" placeholder=\"Ketik...\" value={nama_item} onChange={e => {\r\n                            if (String(e.target.value).length > 0) {\r\n                                this.setState({\r\n                                    nama_item: e.target.value,\r\n                                });\r\n                            } else {\r\n                                this.setState({\r\n                                    nama_item: null,\r\n                                });\r\n                            }\r\n                        }} />\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <label for=\"input-harga\" class=\"form-label\">Harga</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"input-harga\" placeholder=\"Ketik...\" value={harga} onChange={e => {\r\n                            // eslint-disable-next-line\r\n                            e.target.value = e.target.value.replace(/[^0-9\\.]+/g, '');\r\n                            if (String(e.target.value).length > 0) {\r\n                                this.setState({\r\n                                    harga: parseInt(e.target.value),\r\n                                });\r\n                            } else {\r\n                                this.setState({\r\n                                    harga: null,\r\n                                });\r\n                            }\r\n                        }} />\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <label for=\"input-keuntungan\" class=\"form-label\">Keuntungan</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"input-keuntungan\" placeholder=\"Ketik...\" value={keuntungan} onChange={e => {\r\n                            // eslint-disable-next-line\r\n                            e.target.value = e.target.value.replace(/[^0-9\\.]+/g, '');\r\n                            if (String(e.target.value).length > 0) {\r\n                                this.setState({\r\n                                    keuntungan: parseInt(e.target.value),\r\n                                });\r\n                            } else {\r\n                                this.setState({\r\n                                    keuntungan: null,\r\n                                });\r\n                            }\r\n                        }} />\r\n                    </div>\r\n                    {(nama_item && String(nama_item).length > 0 && nama_item !== this.props.nama)\r\n                        || (harga && String(harga).length > 0 && parseInt(harga) !== this.props.harga)\r\n                        || (keuntungan && String(keuntungan).length > 0 && parseInt(keuntungan) !== this.props.keuntungan) ? <>\r\n                        <button class=\"btn btn-success\" onClick={() => {\r\n                            this.setState({\r\n                                loading: true,\r\n                            });\r\n                            setTimeout(() => {\r\n                                this.props.onSubmit({\r\n                                    _id: this.props._id,\r\n                                    nama: nama_item,\r\n                                    harga,\r\n                                    keuntungan,\r\n                                });\r\n                            }, 400);\r\n                        }}>Submit</button>\r\n                    </> : null}\r\n                </>\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport { formatRupiah } from \"../helper/indo\";\r\n\r\nexport default class ViewItem extends Component {\r\n    render() {\r\n        const {\r\n            harga,\r\n            keuntungan,\r\n        } = this.props;\r\n        return (\r\n            <>\r\n                <table class=\"table table-striped\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td style={{ textAlign: \"left\" }}>Harga Asli</td>\r\n                            <td>{formatRupiah(harga, \"Rp.\")}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td style={{ textAlign: \"left\" }}>Keuntungan</td>\r\n                            <td>{formatRupiah(keuntungan, \"Rp.\")}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\n\nimport moment from \"moment\";\nimport 'moment/locale/id';\n\nimport {\n  getRequest,\n  postRequest,\n} from \"./utils/Axios\";\n\nimport './assets/css/App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport 'bootstrap-icons/font/bootstrap-icons.css';\n\nimport Container from \"./components/Container\";\nimport Card from \"./components/Card\";\nimport Info from \"./components/Info\";\n\nimport Loading from './components/Animates/Loading';\n\nimport {\n  createDelete,\n  createModal,\n  createSuccess,\n} from \"./utils/SweetAlert\";\n\nimport {\n  ModalAddItem,\n  ModalUpdateItem,\n  ModalViewItem,\n} from \"./modals\";\n\nimport ReactExport from \"react-export-excel\";\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nmoment.lang('id');\nconst now_date = moment.unix(parseInt((new Date()).getTime()) / 1000).format('YYYY-MM-DD_HH-m-s_dddd');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      error: false,\n      item: [],\n      view: [],\n    }\n  }\n\n  refreshData() {\n    getRequest(\"/api/refresh-item\", hasil => {\n      this.setState({\n        item: hasil.data,\n        view: hasil.data,\n        isLoaded: true,\n      })\n    })\n  }\n\n  componentDidMount() {\n    this.refreshData()\n  }\n\n  addItem(data) {\n    postRequest(\"/api/insert-item\", data, hasil => {\n      this.refreshData()\n      createSuccess(hasil.message);\n    })\n  }\n  updateItem(data) {\n    postRequest(\"/api/update-item\", data, hasil => {\n      this.refreshData()\n      createSuccess(hasil.message);\n    })\n  }\n  deleteItem(data) {\n    const {\n      _id,\n    } = data;\n    postRequest(\"/api/delete-item\", { _id }, hasil => {\n      this.refreshData()\n      createSuccess(hasil.message);\n    })\n  }\n\n  // =======================================================\n\n  modalView(data) {\n    const {\n      nama,\n    } = data;\n    createModal(nama, <ModalViewItem {...data} />)\n  }\n  modalInsert() {\n    createModal(\"Tambah Item\", <ModalAddItem onSubmit={data => {\n      this.addItem(data);\n    }} />);\n  }\n  modalUpdate(data) {\n    console.log({ data });\n    createModal(\"Ubah Item\", <ModalUpdateItem {...data} onSubmit={data => {\n      this.updateItem(data);\n    }} />)\n  }\n  modalDelete(data) {\n    const {\n      nama,\n    } = data;\n    createDelete(() => {\n      this.deleteItem(data);\n    }, <>\n      apakah kamu yakin ingin menghapus data <b>{nama}</b> ??\n    </>)\n  }\n\n  render() {\n    const {\n      isLoaded,\n      error,\n      item,\n      view,\n    } = this.state;\n    if (error) {\n      return error;\n    } else if (!isLoaded) {\n      return <div style={{\n        height: \"100vh\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}>\n        <Loading\n          size={50}\n          fontSize={20}\n          message={\"Request...\"}\n        />\n      </div>;\n    } else {\n      return (\n        <Container>\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"row\">\n                {item.length === 0 ? <>\n                  <div className=\"col-12 col-sm-6 col-md-6 col-lg-4 text-center\">\n                    <a href=\"!#\" className=\"btn btn-success\" onClick={() => {\n                      this.modalInsert();\n                    }} >Tambah</a>\n                  </div>\n                </> : <>\n                  <div className=\"col-6 col-sm-6 col-md-6 col-lg-4 text-center\">\n                    <a href=\"!#\" className=\"btn btn-success\" onClick={() => {\n                      this.modalInsert();\n                    }} >Tambah</a>\n                  </div>\n                  <div className=\"col-6 col-sm-6 col-md-6 col-lg-4 text-center\">\n                    <ExcelFile\n                      element={<button href=\"!#\" className=\"btn btn-secondary\" >Download</button>}\n                      filename={\"Rekap_\" + now_date}\n                    >\n                      <ExcelSheet\n                        data={item.sort(function (a, b) {\n                          if (a.nama < b.nama) { return -1; }\n                          if (a.nama > b.nama) { return 1; }\n                          return 0;\n                        }).map((val, i) => {\n                          val.no = i + 1;\n                          val.harga_jual = parseInt(val.harga) + parseInt(val.keuntungan);\n                          return val;\n                        })}\n                        name={\"Rekap\"}\n                      >\n                        <ExcelColumn label=\"No\" value=\"no\" />\n                        <ExcelColumn label=\"Nama Item\" value=\"nama\" />\n                        <ExcelColumn label=\"Harga Asli\" value=\"harga\" />\n                        <ExcelColumn label=\"Keuntungan\" value=\"keuntungan\" />\n                        <ExcelColumn label=\"Harga Jual\" value=\"harga_jual\" />\n                      </ExcelSheet>\n                    </ExcelFile>\n                  </div>\n                </>}\n                <div className=\"col-sm-12 col-md-6 col-lg-4 text-center mt-4\">\n                  <div class=\"input-group\">\n                    <div class=\"input-group-text\"><i class=\"bi bi-search\"></i></div>\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Cari...\" onChange={e => {\n                      this.setState({\n                        view: item.filter(v => {\n                          return String(v.nama).includes(e.target.value)\n                        }),\n                      })\n                    }} />\n                  </div>\n                </div>\n              </div>\n            </div>\n            {view\n              .sort(function (a, b) {\n                if (a.nama < b.nama) { return -1; }\n                if (a.nama > b.nama) { return 1; }\n                return 0;\n              })\n              .map(data => {\n                const {\n                  nama,\n                  harga,\n                  keuntungan,\n                } = data;\n                return <Card\n                  nama={nama}\n                  onClick={() => {\n                    this.modalView(data);\n                  }}\n                >\n                  <Info\n                    harga={harga}\n                    keuntungan={keuntungan}\n                    onClick={() => {\n                      this.modalView(data);\n                    }}\n                    onUpdate={() => {\n                      this.modalUpdate(data);\n                    }}\n                    onDelete={() => {\n                      this.modalDelete(data);\n                    }}\n                  />\n                </Card>;\n              })}\n          </div>\n        </Container >\n      );\n    }\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// test\n// import TestExcel from \"./test/Excel\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}